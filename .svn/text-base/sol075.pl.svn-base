# Use Euclid's formula which gives Pythagorean triples for any m >= n.
# a = 2*m*n
# b = m*m - n*n
# c = m*m + n*n
# if m>n are integers, hcf(m, n) = 1 and m + n = 1 mod 2, the above is
# primitive. All triples can be generated by multiples of the above ones.
my $et = 2000000;
my ($m, $n) = (1, 1);
my $length;
my @c;
outer:while(1) {
	$n++;
	$length = 2*$m*($m+$n);
	while($length > $et || $n >= $m) {
		last outer if $n == 1;
		$m++;
		$n = 1;
		$length = 2*$m*($m+$n);
	}
	next if ($m + $n) % 2 == 0;
	my $a = $m;
	my $b = $n;
	while($b != 0) {
		my $ne = $a % $b;
		$a = $b;
		$b = $ne;
	}
	next if $a != 1;
	for(1..int($et/$length)) {
		$c[$_*$length]++;
	}
}
my $sum = 0;
for(@c) {
	$sum++ if $_ == 1;
}
print "$sum\n";
